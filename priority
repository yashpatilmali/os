#include <stdio.h>

int main() {
    int n, i, j;
    
  
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    
 
    int proc[n], burstTime[n], priority[n];
    int completionTime[n], turnaroundTime[n], waitingTime[n];
    
    for (i = 0; i < n; i++) {
        proc[i] = i + 1; 
        printf("Enter Burst Time for Process %d: ", i + 1);
        scanf("%d", &burstTime[i]);
        printf("Enter Priority for Process %d (lower value means higher priority): ", i + 1);
        scanf("%d", &priority[i]);
    }
    
    
    for (i = 0; i < n - 1; i++) {
        for (j = i + 1; j < n; j++) {
            if (priority[i] > priority[j]) {
           
                int temp = priority[i];
                priority[i] = priority[j];
                priority[j] = temp;
                
               .
                temp = burstTime[i];
                burstTime[i] = burstTime[j];
                burstTime[j] = temp;
                
              
                temp = proc[i];
                proc[i] = proc[j];
                proc[j] = temp;
            }
        }
    }
    
   
    completionTime[0] = burstTime[0]; 
    turnaroundTime[0] = completionTime[0]; 
    waitingTime[0] = 0;
    
    for (i = 1; i < n; i++) {
        completionTime[i] = completionTime[i - 1] + burstTime[i];
        turnaroundTime[i] = completionTime[i]; // As arrival time is 0
        waitingTime[i] = turnaroundTime[i] - burstTime[i];
    }
    
  
    printf("\nProcess\tBurst Time\tPriority\tCompletion Time\tTurnaround Time\tWaiting Time\n");
    for (i = 0; i < n; i++) {
        printf("P%d\t%d\t\t%d\t\t%d\t\t%d\t\t%d\n", 
               proc[i], burstTime[i], priority[i], completionTime[i], turnaroundTime[i], waitingTime[i]);
    }
    
  
    float totalWT = 0, totalTT = 0;
    for (i = 0; i < n; i++) {
        totalWT += waitingTime[i];
        totalTT += turnaroundTime[i];
    }
    
    printf("\nAverage Waiting Time: %.2f\n", totalWT / n);
    printf("Average Turnaround Time: %.2f\n", totalTT / n);
    
    return 0;
}
